"""Peewee migrations -- 039_add_sourcefile_ai_generated.py.

Some examples (model - class or model name)::

    > Model = migrator.orm['table_name']            # Return model in current state by name
    > Model = migrator.ModelClass                   # Return model in current state by name

    > migrator.sql(sql)                             # Run custom SQL
    > migrator.run(func, *args, **kwargs)           # Run python function with the given args
    > migrator.create_model(Model)                  # Create a model (could be used as decorator)
    > migrator.remove_model(model, cascade=True)    # Remove a model
    > migrator.add_fields(model, **fields)          # Add fields to a model
    > migrator.change_fields(model, **fields)       # Change fields
    > migrator.remove_fields(model, *field_names, cascade=True)
    > migrator.rename_field(model, old_field_name, new_field_name)
    > migrator.rename_table(model, new_table_name)
    > migrator.add_index(model, *col_names, unique=False)
    > migrator.add_not_null(model, *field_names)
    > migrator.add_default(model, field_name, default)
    > migrator.add_constraint(model, name, sql)
    > migrator.drop_index(model, *col_names)
    > migrator.drop_not_null(model, *field_names)
    > migrator.drop_constraints(model, *constraints)

"""

from contextlib import suppress

import peewee as pw
from peewee_migrate import Migrator


with suppress(ImportError):
    import playhouse.postgres_ext as pw_pext


def migrate(migrator: Migrator, database: pw.Database, *, fake=False):
    """Add ai_generated boolean field to Sourcefile table.
    
    This field indicates whether the sourcefile was generated by AI (True) or imported from a real source (False).
    """
    # Define the model to add field to
    class Sourcefile(pw.Model):
        ai_generated = pw.BooleanField(default=False)
        
        class Meta:
            table_name = 'sourcefile'
    
    with database.atomic():
        # 1. Add the column as nullable first
        migrator.add_fields(
            Sourcefile,
            ai_generated=pw.BooleanField(null=True, default=False)
        )
        
        # 2. Fill existing rows with default value (False)
        migrator.sql("UPDATE sourcefile SET ai_generated = FALSE")
        
        # 3. Set the column to NOT NULL
        migrator.sql("ALTER TABLE sourcefile ALTER COLUMN ai_generated SET NOT NULL")


def rollback(migrator: Migrator, database: pw.Database, *, fake=False):
    """Roll back the addition of ai_generated field."""
    # Define the model for rollback
    class Sourcefile(pw.Model):
        class Meta:
            table_name = 'sourcefile'
    
    with database.atomic():
        migrator.remove_fields(Sourcefile, 'ai_generated')
    
