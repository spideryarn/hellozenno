This is a quick search for a wordform typed directly by the user, as the first stage of a dictionary lookup.

The input is probably a {{ target_language_name }} word, but it might be a word in English, or it might be invalid.

We will respond with a JSON data structure (see below) that contains zero/one/more {{ target_language_name }} results and zero/one/more English results. The ideal case is when we return exactly one result across both languages, because then we can redirect to that page, otherwise we'll have to show a results page for the user to select from.

Note: even if the input is an English word, the wordform(s) that we return will be in {{ target_language_name }},i.e. translation(s) of the English word.

Your task is to analyze the input and return appropriate metadata based on these cases:

1. If the input is a {{ target_language_name }} lemma (dictionary form):
   - Return all fields with appropriate values
   - Set inflection_type to describe the lemma form (e.g. "first-person singular present" for verbs)
   - Set possible_misspellings to None
   - For modern languages, use modern forms only (e.g. "έπειτα" not "ἔπειτα")
   - Missing accents are ok (e.g. "επειτα" -> "έπειτα")
   - Case variations are ok (e.g. "ΕΠΕΙΤΑ" -> "έπειτα")

2. If the input is a valid {{ target_language_name }} wordform but not a lemma:
   - Return all fields with appropriate values
   - Set lemma to the dictionary form this wordform belongs to
   - Set inflection_type to describe this specific form
   - Set possible_misspellings to None
   - For modern languages, use modern forms only
   - Missing accents are ok (e.g. "ανθρωπος" -> "άνθρωπος")
   - Case variations are ok (e.g. "ΚΑΛΟΣ" -> "καλός")
   - The translations should reflect the INFLECTED form, not the lemma, e.g. "προσγειώθηκαν" -> "they landed" rather than just "land"
   - For ambiguous cases, always prefer the interpretation that has a different lemma. For example:
     * "μόνο" -> lemma="μόνος" (adjective) not lemma="μόνο" (adverb)
     * "καλά" -> lemma="καλός" (adjective) not lemma="καλά" (adverb)
     * "πολύ" -> lemma="πολύς" (adjective) not lemma="πολύ" (adverb)

3. If the input is an English word:
   - Return results in the `english_results` section, not target_language_results
   - Return all fields with appropriate values
   - Set inflection_type to describe the {{ target_language_name }} word form
   - Set possible_misspellings to None

4. If the input looks like a typo or misspelling:
   - Set all fields to None except possible_misspellings
   - For modern languages, set possible_misspellings to a list of closest correct modern forms, ordered by similarity
   - When deciding between typo vs valid word:
     * Missing accents are NOT typos (e.g. "επειτα" is valid, just needs accent)
     * Case variations are NOT typos (e.g. "ΚΑΛΟΣ" is valid, just needs case normalization)
     * These ARE typos:
       - Double letters that should be single (e.g. "καλλός" -> "καλός")
       - Missing letters (e.g. "έπιτα" -> "έπειτα")
       - Similar-looking letters (e.g. "μηλώ" -> "μιλώ")
       - Extra accents (e.g. "καί" -> "και")
       - Mixed Greek/Latin letters (e.g. "καλoς" -> "καλός")
       - Extra letters (e.g. "καλόςς" -> "καλός")
       - Wrong letter order (e.g. "καλσς" -> "καλός")
       - Double initial consonants (e.g. "κκαι" -> "και")

 If the input is definitely invalid (wrong language, nonsense, etc.):
   - Set all fields to None

Notes:
- For any input, first sanitize by removing extra whitespace, punctuation, down-casing appropriately, etc.
- The sanitized form should be returned in the wordform field
- For lemmas and valid wordforms, possible_misspellings should be None
- Raise an error if the input is empty or invalid
- For modern languages, only use modern forms, not ancient/archaic forms
- IMPORTANT: Never include slashes (/) in lemmas or wordforms as they cause URL routing issues
- Format the JSON response carefully to ensure it is valid
- Make sure all strings in lists are properly quoted
- Do not include any trailing commas in lists or objects

Example valid JSON responses using Greek (modern) as the target language:

1. For a {{ target_language_name }} lemma (with missing accent) "επειτα":
<json_example>
{
    "target_language_results": {
        "matches": [
            {
                "target_language_wordform": "έπειτα",
                "target_language_lemma": "έπειτα",
                "part_of_speech": "adverb",
                "english": ["then", "afterwards", "later"],
                "inflection_type": "adverb",
            }
        ],
        "possible_misspellings": null
    },
    "english_results": {
        "matches": [],
        "possible_misspellings": null
    }
}
</json_example>

2. For a {{ target_language_name }} inflected noun wordform "άνθρωποι":
<json_example>
{
    "target_language_results": {
        "matches": [
            {
                "target_language_wordform": "άνθρωποι",
                "target_language_lemma": "άνθρωπος",
                "part_of_speech": "noun",
                "english": ["people", "mankind", "humankind", "humanity"],
                "inflection_type": "masculine plural nominative",
            },
        ],
        "possible_misspellings": null
    },
    "english_results": {
        "matches": [],
        "possible_misspellings": null
    }
}
</json_example>

2b. For a {{ target_language_name }} inflected verb form (with missing accent) "προσγειωθηκαν":
<json_example>
{
    "target_language_results": {
        "matches": [
            {
                "target_language_wordform": "προσγειώθηκαν",
                "target_language_lemma": "προσγειώνομαι",
                "part_of_speech": "verb",
                "english": ["they landed", "they touched down"],
                "inflection_type": "third-person plural passive aorist",
            },
        ],
        "possible_misspellings": null
    },
    "english_results": {
        "matches": [],
        "possible_misspellings": null
    }
}
</json_example>

3. For an English word (e.g. "examples"):
<json_example>
{
    "target_language_results": {
        "matches": [],
        "possible_misspellings": null
    },
    "english_results": {
        "matches": [
            {
                "target_language_wordform": "παραδείγματα",
                "target_language_lemma": "παράδειγμα",
                "part_of_speech": "noun",
                "english": ["example", "illustration", "instance"],
                "inflection_type": "neuter plural nominative"
            }
        ],
        "possible_misspellings": null
    }
}
</json_example>

4. For a {{ target_language_name }} typo "μηλώ":
<json_example>
{
    "target_language_results": {
        "matches": [],
        "possible_misspellings": ["μιλώ"]
    },
    "english_results": {
        "matches": [],
        "possible_misspellings": ["μιλώ"]
    }
}
</json_example>

5. For an invalid word, e.g. "asdf" or "bonjour":
<json_example>
{
    "target_language_results": {
        "matches": [],
        "possible_misspellings": null
    },
    "english_results": {
        "matches": [],
        "possible_misspellings": null
    }
}
</json_example>

Provide only the JSON output with no commentary:

<json_schema>
{
    "target_language_results": {
        "matches": [
            {
                "target_language_wordform": "...", # the sanitized form if valid
                "target_language_lemma": "...", # the dictionary form this belongs to
                "part_of_speech": "...", # e.g. "verb", "adjective", "noun", etc.
                "english": ["..."], # English translations
                "inflection_type": "..." # e.g. "first-person singular present", "feminine plural genitive"
            }
        ],
        "possible_misspellings": ["..."] or null # ordered list of suggested corrections, or None if valid
    },
    "english_results": {
        "matches": [
            {
                "target_language_wordform": "...",
                "target_language_lemma": "...",
                "part_of_speech": "...",
                "english": ["..."], # English input word
                "inflection_type": "..."
            }
        ],
        "possible_misspellings": ["..."] or null
    }
}
</json_schema>

----

{{ target_language_name }} input:
<wordform>
{{ wordform }}
</wordform>