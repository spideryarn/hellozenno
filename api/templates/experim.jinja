{% extends "base.jinja" %}
{% from "base_svelte.jinja" import load_svelte_component %}

{% set vite_entries = ['experimcounter', 'minilemma'] %}

{% block head_imports %}
{{ super() }}
<script>
    console.log('Experim page loaded');
    window.addEventListener('error', function(event) {
        console.error('Script loading error:', event.target.src || event.target.href);
    });
</script>
{% endblock head_imports %}

{% block title %}
Experimental Page - Hello Zenno
{% endblock title %}

{% block breadcrumbs %}
<span>Experimental</span>
{% endblock breadcrumbs %}

{% block content %}
<div class="container">
    <div class="content-box">
        <h1>Hello World!</h1>
        <p>This is a simple experimental page.</p>
        <p>Welcome to the Hello Zenno experimental area.</p>
        
        <!-- Counter Svelte component mount point -->
        <div id="experim-counter-1"></div>
        {{ load_svelte_component('ExperimCounter', {
            'initialCount': 5,
            'buttonText': 'Click me!'
        }, component_id='experim-counter-1') }}
        
        <!-- MiniLemma Svelte component examples -->
        <h2>Sample Lemma Components</h2>
        <p>Demonstrating the MiniLemma component with multiple examples:</p>
        
        <div class="lemma-grid">
            {% for lemma in sample_lemmas %}
                <div id="mini-lemma-{{ loop.index }}"></div>
                {{ load_svelte_component('MiniLemma', lemma, component_id='mini-lemma-' + loop.index|string) }}
            {% endfor %}
        </div>
        
        <!-- Manual HTML version as fallback -->
        <h2>HTML Fallback Version</h2>
        {% if sample_lemmas %}
            <div class="lemma-grid">
                {% for lemma in sample_lemmas %}
                    <div class="mini-lemma">
                        <a href="{{ lemma.href }}" class="lemma-link">
                            <div class="lemma-content">
                                <div class="lemma-text">{{ lemma.lemma }}</div>
                                <div class="part-of-speech">{{ lemma.partOfSpeech }}</div>
                                <div class="translations">{{ lemma.translations | join(', ') }}</div>
                            </div>
                        </a>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>
</div>
{% endblock content %}


{% block head_css %}
<style>
    .container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }
    
    .content-box {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        text-align: center;
    }
    
    h1 {
        color: #4a6ee0;
        margin-bottom: 1rem;
    }
    
    h2 {
        color: #4a6ee0;
        margin-top: 2rem;
        margin-bottom: 1rem;
        text-align: left;
    }
    
    p {
        color: #333;
        line-height: 1.6;
        margin-bottom: 1rem;
        text-align: left;
    }
    
    /* Grid layout for lemmas */
    .lemma-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1rem;
        margin: 1.5rem 0;
        text-align: left;
    }
    
    /* Styles for the MiniLemma component */
    .mini-lemma {
        margin: 0.25rem 0;
    }

    .lemma-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .lemma-content {
        padding: 0.5rem 0.75rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.375rem;
        transition: all 0.2s;
    }

    .lemma-content:hover {
        background-color: #f8fafc;
        border-color: #cbd5e1;
    }

    .lemma-text {
        font-size: 1.1rem;
        font-weight: bold;
        line-height: 1.4;
        margin-bottom: 0.125rem;
    }

    .part-of-speech {
        font-size: 0.875rem;
        color: #64748b;
        font-style: italic;
        line-height: 1.4;
        margin-bottom: 0.125rem;
    }

    .translations {
        font-size: 0.875rem;
        color: #64748b;
        line-height: 1.4;
    }
</style>
{% endblock head_css %}

